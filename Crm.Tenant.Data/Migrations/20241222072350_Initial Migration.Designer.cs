// <auto-generated />
using System;
using Crm.Tenant.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Crm.Tenant.Data.Migrations
{
    [DbContext(typeof(ClientApplicationDbContext))]
    [Migration("20241222072350_Initial Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Crm.Admin.Service.Models.UserModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Crm.Api.Models.Quotation.PurchaseOrderFieldsModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("DiscountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GrandTotal")
                        .HasColumnType("float");

                    b.Property<double?>("GstAmount")
                        .HasColumnType("float");

                    b.Property<double?>("GstPercent")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("NetTotal")
                        .HasColumnType("float");

                    b.Property<double?>("OtherCharges")
                        .HasColumnType("float");

                    b.Property<int?>("PurchaseOrderAssignedToId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseOrderAttentionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PurchaseOrderMadeById")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseOrderVendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderAssignedToId");

                    b.HasIndex("PurchaseOrderAttentionId");

                    b.HasIndex("PurchaseOrderMadeById");

                    b.HasIndex("PurchaseOrderVendorId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("Crm.Api.Models.Quotation.PurchaseOrderItemModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Hsn")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("SrNo")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Hsn");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderItems");
                });

            modelBuilder.Entity("Crm.Api.Models.Quotation.PurchaseOrderTermsModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CountryofOriginId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryNameId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryTimeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MtcTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PackingTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ValidityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryofOriginId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DeliveryNameId");

                    b.HasIndex("DeliveryTimeId");

                    b.HasIndex("MtcTypeId");

                    b.HasIndex("PackingTypeId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("ValidityId");

                    b.ToTable("PurchaseOrderTerms");
                });

            modelBuilder.Entity("Crm.Api.Models.Quotation.QuotationFieldsModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("DiscountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GrandTotal")
                        .HasColumnType("float");

                    b.Property<double?>("GstAmount")
                        .HasColumnType("float");

                    b.Property<double?>("GstPercent")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<double?>("NetTotal")
                        .HasColumnType("float");

                    b.Property<double?>("OtherCharges")
                        .HasColumnType("float");

                    b.Property<int?>("QuotationAssignedToId")
                        .HasColumnType("int");

                    b.Property<int?>("QuotationAttentionId")
                        .HasColumnType("int");

                    b.Property<int?>("QuotationCloseReasonId")
                        .HasColumnType("int");

                    b.Property<int?>("QuotationCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuotationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuotationImportance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuotationMadeById")
                        .HasColumnType("int");

                    b.Property<int>("QuotationPriority")
                        .HasColumnType("int");

                    b.Property<string>("QuotationStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuotationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuotationAssignedToId");

                    b.HasIndex("QuotationAttentionId");

                    b.HasIndex("QuotationCloseReasonId");

                    b.HasIndex("QuotationCompanyId");

                    b.HasIndex("QuotationMadeById");

                    b.ToTable("Quotations");
                });

            modelBuilder.Entity("Crm.Api.Models.Quotation.QuotationItemModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Margin")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<double>("PackagingCharges")
                        .HasColumnType("float");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("QuotationId")
                        .HasColumnType("int");

                    b.Property<int>("SrNo")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("QuotationId");

                    b.ToTable("QuotationItems");
                });

            modelBuilder.Entity("Crm.Api.Models.Quotation.QuotationTermsModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CountryofOriginId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryNameId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryTimeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MtcTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PackingTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int?>("QuotationId")
                        .HasColumnType("int");

                    b.Property<int?>("ValidityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryofOriginId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DeliveryNameId");

                    b.HasIndex("DeliveryTimeId");

                    b.HasIndex("MtcTypeId");

                    b.HasIndex("PackingTypeId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("QuotationId");

                    b.HasIndex("ValidityId");

                    b.ToTable("QuotationTerms");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.ClientModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.CountryModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.CurrencyModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.DeliveredToModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransportModeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransportModeId");

                    b.ToTable("DeliveredTo");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.DeliveryTimeModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DeliveryTime");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.MaterialModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.MemberModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWhatsApp")
                        .HasColumnType("bit");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SkypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.MtcTypeModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MtcType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MtcTypes");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.PaymentTypeModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.ProductModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.PurchaseOrder.HsnModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("HsnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Hsn");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.PurchaseOrder.VendorMemberModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainSeller")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWhatsApp")
                        .HasColumnType("bit");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PMOC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorMember");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.PurchaseOrder.VendorModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GstNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.QuotationCloseReasonModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuotationCloseReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuotationCloseReasons");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.TransportModeModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransportMode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransportModes");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.UnitModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.ValidityModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Validity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Validities");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Quotation.QuotationFollowUpModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FollowUpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FollowUpDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FollowUpRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NextFollowUpDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuotationId")
                        .HasColumnType("int");

                    b.Property<int>("SrNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuotationId");

                    b.ToTable("QuotationFollowUp");
                });

            modelBuilder.Entity("Crm.Api.Models.Quotation.PurchaseOrderFieldsModel", b =>
                {
                    b.HasOne("Crm.Admin.Service.Models.UserModel", "PurchaseOrderAssignedToUserModel")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderAssignedToId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.PurchaseOrder.VendorMemberModel", "PurchaseOrderVendorMemberModel")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderAttentionId");

                    b.HasOne("Crm.Admin.Service.Models.UserModel", "PurchaseOrderMadeByUserModel")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderMadeById");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.PurchaseOrder.VendorModel", "PurchaseOrderVendorModel")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderVendorId");

                    b.Navigation("PurchaseOrderAssignedToUserModel");

                    b.Navigation("PurchaseOrderMadeByUserModel");

                    b.Navigation("PurchaseOrderVendorMemberModel");

                    b.Navigation("PurchaseOrderVendorModel");
                });

            modelBuilder.Entity("Crm.Api.Models.Quotation.PurchaseOrderItemModel", b =>
                {
                    b.HasOne("Crm.Tenant.Data.Models.Masters.PurchaseOrder.HsnModel", "HsnModel")
                        .WithMany()
                        .HasForeignKey("Hsn");

                    b.HasOne("Crm.Api.Models.Quotation.PurchaseOrderFieldsModel", "PurchaseOrderFieldsModel")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HsnModel");

                    b.Navigation("PurchaseOrderFieldsModel");
                });

            modelBuilder.Entity("Crm.Api.Models.Quotation.PurchaseOrderTermsModel", b =>
                {
                    b.HasOne("Crm.Tenant.Data.Models.Masters.CountryModel", "CountryofOriginModel")
                        .WithMany()
                        .HasForeignKey("CountryofOriginId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.CurrencyModel", "CurrencyModel")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.DeliveredToModel", "DeliveredToModel")
                        .WithMany()
                        .HasForeignKey("DeliveryNameId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.DeliveryTimeModel", "DeliveryTimeModel")
                        .WithMany()
                        .HasForeignKey("DeliveryTimeId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.MtcTypeModel", "MtcTypeModel")
                        .WithMany()
                        .HasForeignKey("MtcTypeId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.TransportModeModel", "PackingTypeModel")
                        .WithMany()
                        .HasForeignKey("PackingTypeId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.PaymentTypeModel", "PaymentTypeModel")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.HasOne("Crm.Api.Models.Quotation.PurchaseOrderFieldsModel", "PurchaseOrderFieldsModel")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.ValidityModel", "ValidityModel")
                        .WithMany()
                        .HasForeignKey("ValidityId");

                    b.Navigation("CountryofOriginModel");

                    b.Navigation("CurrencyModel");

                    b.Navigation("DeliveredToModel");

                    b.Navigation("DeliveryTimeModel");

                    b.Navigation("MtcTypeModel");

                    b.Navigation("PackingTypeModel");

                    b.Navigation("PaymentTypeModel");

                    b.Navigation("PurchaseOrderFieldsModel");

                    b.Navigation("ValidityModel");
                });

            modelBuilder.Entity("Crm.Api.Models.Quotation.QuotationFieldsModel", b =>
                {
                    b.HasOne("Crm.Admin.Service.Models.UserModel", "QuotationAssignedToUserModel")
                        .WithMany()
                        .HasForeignKey("QuotationAssignedToId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.MemberModel", "QuotationAttentionModel")
                        .WithMany()
                        .HasForeignKey("QuotationAttentionId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.QuotationCloseReasonModel", "QuotationCloseReasonsModel")
                        .WithMany()
                        .HasForeignKey("QuotationCloseReasonId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.ClientModel", "QuotationCompanyModel")
                        .WithMany()
                        .HasForeignKey("QuotationCompanyId");

                    b.HasOne("Crm.Admin.Service.Models.UserModel", "QuotationMadeByUserModel")
                        .WithMany()
                        .HasForeignKey("QuotationMadeById");

                    b.Navigation("QuotationAssignedToUserModel");

                    b.Navigation("QuotationAttentionModel");

                    b.Navigation("QuotationCloseReasonsModel");

                    b.Navigation("QuotationCompanyModel");

                    b.Navigation("QuotationMadeByUserModel");
                });

            modelBuilder.Entity("Crm.Api.Models.Quotation.QuotationItemModel", b =>
                {
                    b.HasOne("Crm.Api.Models.Quotation.QuotationFieldsModel", "QuotationFieldsModel")
                        .WithMany()
                        .HasForeignKey("QuotationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuotationFieldsModel");
                });

            modelBuilder.Entity("Crm.Api.Models.Quotation.QuotationTermsModel", b =>
                {
                    b.HasOne("Crm.Tenant.Data.Models.Masters.CountryModel", "CountryofOriginModel")
                        .WithMany()
                        .HasForeignKey("CountryofOriginId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.CurrencyModel", "CurrencyModel")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.DeliveredToModel", "DeliveredToModel")
                        .WithMany()
                        .HasForeignKey("DeliveryNameId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.DeliveryTimeModel", "DeliveryTimeModel")
                        .WithMany()
                        .HasForeignKey("DeliveryTimeId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.MtcTypeModel", "MtcTypeModel")
                        .WithMany()
                        .HasForeignKey("MtcTypeId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.TransportModeModel", "PackingTypeModel")
                        .WithMany()
                        .HasForeignKey("PackingTypeId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.PaymentTypeModel", "PaymentTypeModel")
                        .WithMany()
                        .HasForeignKey("PaymentId");

                    b.HasOne("Crm.Api.Models.Quotation.QuotationFieldsModel", "QuotationFieldsModel")
                        .WithMany()
                        .HasForeignKey("QuotationId");

                    b.HasOne("Crm.Tenant.Data.Models.Masters.ValidityModel", "ValidityModel")
                        .WithMany()
                        .HasForeignKey("ValidityId");

                    b.Navigation("CountryofOriginModel");

                    b.Navigation("CurrencyModel");

                    b.Navigation("DeliveredToModel");

                    b.Navigation("DeliveryTimeModel");

                    b.Navigation("MtcTypeModel");

                    b.Navigation("PackingTypeModel");

                    b.Navigation("PaymentTypeModel");

                    b.Navigation("QuotationFieldsModel");

                    b.Navigation("ValidityModel");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.DeliveredToModel", b =>
                {
                    b.HasOne("Crm.Tenant.Data.Models.Masters.TransportModeModel", "TransportMode")
                        .WithMany()
                        .HasForeignKey("TransportModeId");

                    b.Navigation("TransportMode");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.MemberModel", b =>
                {
                    b.HasOne("Crm.Tenant.Data.Models.Masters.ClientModel", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Masters.PurchaseOrder.VendorMemberModel", b =>
                {
                    b.HasOne("Crm.Tenant.Data.Models.Masters.PurchaseOrder.VendorModel", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Crm.Tenant.Data.Models.Quotation.QuotationFollowUpModel", b =>
                {
                    b.HasOne("Crm.Api.Models.Quotation.QuotationFieldsModel", "QuotationFieldsModel")
                        .WithMany()
                        .HasForeignKey("QuotationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuotationFieldsModel");
                });
#pragma warning restore 612, 618
        }
    }
}
